プログマビリティ　プログラム言語を使用しネットワークの管理運用を行うというもの。今まで手動で行っていたタスクをプログラム言語を利用することで自動化させる。

REST API(RESTful API)　RESTというアプリケーションの設計思想に従って作成されたAPI。双方で扱っているプログラム言語が異なっていてはデータの処理ができないため、汎用的なデータ形式に変換してから通信することが一般的。JSON,XML,YAMLなど

REST(REpresentational State Transfer)複数のソフトウェアを連携させるのに適した設計思想のこと。以下６つすべてを満たすもの。
・クライアントサーバ型の構成
・ステートレス
・キャッシュの可否を制御できる
・統一されたインタフェース
・階層化されたシステム構成であること
・コードオンデマンドであること

{多くのREST APIはHTTPプロトコルを使用する。RESTの原則と親和性が高いため。}

URI(Uniform Resouse Identifer)　web上にあるリソースが存在する位置を示す文字列。URLとURNで構成される。
[https://〇〇.com/shop/sampleapi/v1/?keyword=French]
上記URIがあったとして
①https　が使用するプロトコル
②○○.com　がリソースを保有しているホストを表す。いわゆるドメイン名。IPアドレスのこともある。
③shop/sampleapi/v1　がリソースが保有されているホストのパスを表す。ある情報の一覧の中から特定の情報のみを検索するなど、クライアントからサーバ側へ値を渡す必要がある場合はこの後ろにパラメータを追加できる
④?keyword=French　この？から続く部分がパラメータ。この場合キーワードがフランス料理のみの情報を取得するようになってる。

HTTPメソッド(HTTPリクエストメソッド)　HTTPでリソースに対して実行したい操作を示すいくつかのアクションのこと。
CRUD　クライアントの指示したHTTPメソッドによる主要４つの動作。永続的なデータを取り扱うソフトウェアに要求される基本機能。SQLでもそれぞれに対応する構文が用意されている。

CRUD　  HTTPメソッド　　意味
Create POST/PUT　　作成
Read     　GET　　　　読み取り
Update　PUT　　　　更新
Delete　DELETE　　削除


JSON(JavaScript Object Notation)　人間と機械にとって可読性のバランスに優れたデータの形式。人にとって読み書きがしやすく、機会にとってプログラム言語への変換が用意。データ形式についての知識がなくてもある程度意味が理解できる。
以下のルールがある
・「{}」で囲まれたデータの塊をオブジェクト
・データ全体を「{}」で囲む
・オブジェクトはメンバで構成されている
・メンバは「"キー":値」のペアで構成されている
・キーは必ず「""」で囲み、次にメンバが続く際はメンバ間を「,」で区切る
・オブジェクト内の最後のメンバには「,」を付けない
・値には文字列、数値、配列、オブジェクトを指定することができる
・値が文字列の場合「""」で囲む
・値が数値の場合、「''」「""」は付けない
・配列は[値1,値2,値3,...]のうように、複数の値を「[]」で囲む
・配列内のそれぞれの値の間「,」で区切り、最後の値には「,」は付けない
・オブジェクトは{メンバ1,メンバ2,メンバ3,...}のように、複数のメンバを{}で囲む
・オブジェクト内のそれぞれのメンバの間を「,」で区切り、最後のメンバには「,」は付けない
 



構成ドリフト　管理者間での情報共有の不足やファイル管理の未徹底などにより本来同一の設定が行われているべき危機感で発生する設定の差異のこと

構成管理ツール　各機器の設定ファイルを共有フォルダで一元的に管理できるツールのこと。機器の設定内容と共有フォルダ内の設定ファイルを比較することで構成ドリフトが発生しているかをチェックできる。実際に差異が発生した場合は、構成管理サーバが管理者への通知や設定の自動修正を行うことによって構成ドリフトの発生を未然に防止する。

代表的な構成管理ツール
・Ansible RedHat社の開発したオープンソースの構成管理ツール。Push型の通信携帯でSSHやNETCONFなどのリモートプロトコルを使用している。各機器に設定用のソフトを不要とするエージェントレスモデルを採用しているため、各機器に特別な設定が必要ない。

〇Ansibleのコンポーネント　以下はYAMLを使って記述される
＞＞プレイブック　構成管理の対象デバイスやAnsibleが実行するべきタスク,コマンドを記述するファイル
＞＞インベントリ　構成対象となるデバイスリストを記述するファイル
＞＞テンプレート　複数のデバイスに共通の設定内容について記述するファイル
＞＞変数　各デバイス固有の設定項目について記述するファイル
※YAML プログラミング言語の一種。構造的なデータ集合を簡素な文字列として表記することができるデータ形式の一つ。

・Puppet　Puppet Labs社が開発したオープンソースの構成管理ツール。クライアントにソフトウェアのインストールをするエージェントモデルを採用。各ノードが構成管理サーバから設定を取得するPull型の通信形態を採用。プロキシサーバを用いた外部エージェントモデルに対応しているため、puppetに対応していないIOSのばバージョンの機器にも導入可能。クライアントはサーバから設定を取得する際にHTTPやHTTPSをりようしてサーバのTCP8140番ポートに接続する。

〇Puppetのコンポーネント　Puppet独自の言語で記述される
＞＞マニフェスト　デバイスの設定修了時のあるべき状態を記述したファイル
＞＞リソース　構成管理の最小単位・構成管理対象：ファイルやユーザ,サービスとそれらのパラメータを記述したコード。
＞＞クラス　複数のリソースをまとめた単位・コード

・Chef　Chef社が開発するオープンソースの構成管理。Pull型通信形態を採用。管理対象のデバイスがChefに対応している必要があるためCisco機器にはあまり採用されない。クライアントはサーバから設定を取得する際、HTTPやHTTPSを利用してTCP10002番ポートに接続する。

〇Chefのコンポーネント　Rubyで記述される
＞＞リソース　構成管理の最小単位：構成管理対象と実行すべき作業が記述されたコード。
＞＞レシピ　リソースをまとめたファイル：条件分岐や繰り返しなどのステートメントでリソースを操作
＞＞クックブック　レシピを含め、その他レシピの実行に必要なファイルやデータがまとまったディレクトリ
＞＞ランリスト　特定のデバイスに対して使用するレシピのリスト