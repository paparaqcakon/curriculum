データは通常ファイルとして扱われ、これを管理するのがファイルシステム。Windowsなどの文化が異なるOSと比較するとファイルシステムの考え方が大きく異なるため、ユーザレベルでの見え方が異なる。HDDデバイスの扱い方にも関係してくるため基本的なことではあるが、様々な操作をするうえで非常に重要な要素といえる。

HDDなどの物体に存在するデータを人間にわかりやすいファイルというものに抽象化、可視化してデータを永続的に管理しやすくするという役目を持つのがファイルシステムの基本的な考え方。キャッシュメモリを利用して効果的にHDDの二次記憶装置を使うといった機能も含まれており、Linuxではこの機能によって大きなファイルでも高速にアクセスすることが可能になっている。単にデータを扱いやすくする竹でなく、H/Wのリソースを効率よっく利用するための機能も含まれている。

VFS(Virtual File System)・・・HDD,CD-ROM,マウスなどのデバイスもファイルとして扱う仮想的なファイルシステム。下位の物理的な媒体を抽象化し、データ、デバイス含めたすべてのコンピュータリソースに対して統一的なファイルアクセスという入出力インタフェースを提供する。小手によってさまざまな対象に対して統一のアクセスを行うことができる。
ファイルシステムの抽象化という役割もある。これによりファイルシステムの種類を意識せずに利用することができる。プログラムからのファイルシステムの操作をEXT2,EXT3,ISO,VFATなどの固有のファイルシステムに変換する。このためユーザはファイルシステムの差異を意識する必要がなく、統一的なアクセス方法で実際には異なるファイルシステムにアクセスできる。


マウント・・・ファイルシステムのツリー構造を木の根に例えると、その木の根に接ぎ木する行為に当たる。OSから対象となるH/WをS/W的に接続する行為。通常Linuxでは各ファイルシステムをディレクトリツリーの[/]以下にマウントすることで利用できるようにする。HDDを物理的に追加したとき、LinuxではストレージのH/Wを認識してもそれだけでファイルシステムとして利用できず、マウントすることが必要不可欠。

以下フローでHDDを追加することになる
１．HDDの物理フォーマット、パーティションを切るなどの作業
２．各パーティションにファイルシステムを構築し、フォーマットする
３．マウントポイントを指定し、でぃてくとりツリーのどこかにマウントを行う

マウントしたデバイスの物理的接続解除をするためには、アンマウントというS/W接続解除の手続きを行ってから物理的解除を行う必要がある。アンマウントをせずに強引に物理的接続解除するとデータを破損する危険がある。


※※ディレクトリはファイルをまとめる存在だが、物理的なデータとしてディレクトリが存在しているわけではない。OSがファイルをまとめるために利用する論理的な存在で、様々な情報からなりたるファイル情報の集合体だといえる。